// Import the required Schema and model constructors from Mongoose
const { Schema, model } = require("mongoose");

// Define the schema for the "products" collection
const productSchema = new Schema(
  {
    // Reference to the seller who owns this product (MongoDB ObjectId)
    // Automatically generated by MongoDB when the seller is created.
    sellerId: {
      type: Schema.ObjectId,
      required: true,
    },

    // Name of the product (used for display and search)
    name: {
      type: String,
      required: true,
    },

    // URL-friendly version of the product name (e.g., "watch-series-10")
    slug: {
      type: String,
      required: true,
    },

    // Category the product belongs to (e.g., "Watch", "Phone")
    // Typically auto-generated by converting spaces to hyphens.
    category: {
      type: String,
      required: true,
    },

    // Brand or manufacturer of the product (e.g., "Apple")
    brand: {
      type: String,
      required: true,
    },

    // Original price of the product before discount
    price: {
      type: Number,
      required: true,
    },

    // Number of units available in stock
    stock: {
      type: Number,
      required: true,
    },

    // Discount percentage (e.g., 10 for 10% off)
    discount: {
      type: Number,
      required: true,
    },

    // Detailed description of the product
    description: {
      type: String,
      required: true,
    },

    // Name of the shop or seller offering this product
    shopName: {
      type: String,
      required: true,
    },

    // Array of image URLs or file paths representing the product's images
    images: {
      type: Array,
      required: true,
    },

    // Average rating score of the product from customer reviews (0 to 5)
    // Defaults to 0 when no reviews have been submitted
    rating: {
      type: Number,
      default: 0,
    },
  },
  {
    // Automatically adds createdAt and updatedAt timestamps
    timestamps: true,
  }
);

// Create a weighted text index for full-text search optimization
productSchema.index(
  {
    name: "text", // Product name
    category: "text", // Product category
    brand: "text", // Product brand
    description: "text", // Product description
  },
  {
    weights: {
      name: 5, // Highest priority in search
      category: 4, // Medium priority
      brand: 3, // Lower priority
      description: 2, // Lowest priority
    },
  }
);

// Export the model for use in the application
// This will map to the "products" collection in MongoDB
module.exports = model("products", productSchema);
